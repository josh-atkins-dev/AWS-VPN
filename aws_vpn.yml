---
- hosts: tag_Name_{{ lookup('env','AWS_PREFIX') }}_vpn
  serial: 1
  gather_facts: yes
  gather_subset: '!all' 
  vars:
    OVPN_DATA: "ovpn-data"

  pre_tasks:
    - block:
        - set_fact:
            OVPN_DATA: "ovpn-data0"
        - file:
            path: "/home/ubuntu/{{ OVPN_DATA }}"
            state: directory
            mode: 0755

      when: ALTERNATIVE is defined
    - fail:

    - block:
      - name: Get VPC public IP
        uri:
          url: http://ipecho.net/plain
          return_content: yes
        register: ip_facts
        tags: always
      - set_fact:
          public_ip: "{{ ip_facts.content }}"
      when: PUBLIC_IP is undefined

    - set_fact:
        public_ip: "{{ PUBLIC_IP }}"
      when: PUBLIC_IP is defined

  roles:
    - {role: angstwad.docker_ubuntu, become: true, tags: docker}

  post_tasks:
    - set_fact:
        tags: always
        env_vars: 
          OVPN_DATA: "{{ OVPN_DATA }}"
        vols:
          - "{{ OVPN_DATA }}:/etc/openvpn"
        docker_ports:
          - 1194:1194/udp
        docker_caps: NET_ADMIN

    - name: pull kylemanna/openvpn
      become: true
      tags: pull
      docker_image:
        name: kylemanna/openvpn


    - name: Generate openvpn config
      become: true
      tags: generate
      docker_container:
        name: openvpn
        image: kylemanna/openvpn
        env: "{{ env_vars }}"
        volumes: "{{ vols }}"
        command: "ovpn_genconfig -u udp://{{ public_ip }}"


    - pause:
        prompt: "
#   Now log into the VPN instance, e.g.:\n
ssh -v -i {{ lookup('env','VM_TEMP_PATH') }}/ssh/{{ lookup('env','AWS_PREFIX') }}-key.pem ubuntu@{{ public_ip }}\n
\n
#   and generate certificates using ovpn_initpki, e.g.:\n
sudo docker run -v {{ OVPN_DATA }}:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki\n
\n
#   Press enter to continue
        "



    - block:
      - name: Remove previous openvpn container
        become: true
        docker_container:
          name: openvpn
          image: kylemanna/openvpn
          state: absent

      - name: Start openvpn
        become: true
        docker_container:
          name: openvpn
          image: kylemanna/openvpn
          env: "{{ env_vars }}"
          volumes: "{{ vols }}"
          capabilities: "{{ docker_caps }}"
          published_ports: "{{ docker_ports }}"
      tags: start


    - pause:
        prompt: "
#   Now log into the VPN instance, e.g.:\n
ssh -v -i {{ lookup('env','VM_TEMP_PATH') }}/ssh/{{ lookup('env','AWS_PREFIX') }}-key.pem ubuntu@{{ public_ip }}\n
\n
#   generate client certificates using ovpn_initpki, e.g.:\n
sudo docker run -v {{ OVPN_DATA }}:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full mbp1 nopass\n
\n
#   retrieve ovpn file:\n
sudo docker run -v ovpn-data:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient mbp1 > /home/ubuntu/mbp1.ovpn

\n
#   Press enter to continue
        "

    - name: Fetch ovpn file
      fetch:
        tags: fetch
        flat: yes
        src: /home/ubuntu/mbp1.ovpn
        dest: "{{ lookup('env','VM_TEMP_PATH') }}/"




